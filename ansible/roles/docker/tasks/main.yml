---
- name: Install prerequisites
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
    state: latest
    update_cache: true

- name: Create directory for Docker key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_os_family | lower }}/gpg"
    dest: /etc/apt/keyrings/docker.asc
    mode: 0644

- name: Get DEB architecture
  ansible.builtin.command: dpkg --print-architecture
  register: deb_architecture

- name: Set Docker repository variables
  set_fact:
    docker_distribution: "{{ 'debian' if ansible_distribution == 'Kali' else ansible_distribution | lower }}"
    docker_release: "{{ 'bullseye' if ansible_distribution == 'Kali' else ansible_distribution_release }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ docker_distribution }} {{ docker_release }} stable"
    state: present
    filename: docker

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
    update_cache: true

- name: Start and enable Docker service
  ansible.builtin.service:
    name: docker
    enabled: yes
    state: started

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
